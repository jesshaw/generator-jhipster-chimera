<%# Returns a string of all react validators required for the input field. -%>
<%_ if (field.fieldValidate === true) { _%>
      rules={{
<%_ if (field.fieldValidationRequired && !field.fieldTypeBoolean) { _%>
      required: { value: true, message: translate('entity.validation.required') },
<%_ } _%>
<%_ if (field.fieldValidationMinLength) { _%>
      minLength: { value: <%= field.fieldValidateRulesMinlength %>, message: translate('entity.validation.minlength', { min: <%= field.fieldValidateRulesMinlength %> }) },
<%_ } _%>
<%_ if (field.fieldValidationMaxLength) { _%>
      maxLength: { value: <%= field.fieldValidateRulesMaxlength %>, message: translate('entity.validation.maxlength', { max: <%= field.fieldValidateRulesMaxlength %> }) },
<%_ } _%>
<%_ if (field.fieldValidationMin) { _%>
      min: { value: <%= field.fieldValidateRulesMin %>, message: translate('entity.validation.min', { min: <%= field.fieldValidateRulesMin %> }) },
<%_ } _%>
<%_ if (field.fieldValidationMax) { _%>
      max: { value: <%= field.fieldValidateRulesMax %>, message: translate('entity.validation.max', { max: <%= field.fieldValidateRulesMax %> }) },
<%_ } _%>
<%_ if (field.fieldValidationPattern) { _%>
      pattern: { value: /<%= field.fieldValidateRulesPatternReact%>/, message: translate('entity.validation.pattern', { pattern: '<%= field.fieldValidateRulesPatternReact.replace(/\\/g, '\\\\')%>' }) },
<%_ } _%>
<%_ if (field.fieldTypeNumeric) { _%>
      validate: v => isNumber(v) || translate('entity.validation.number'),
<%_ } _%>
    }}
<%_ } _%>