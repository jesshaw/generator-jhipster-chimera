<%
const mapper = entityInstance  + 'Mapper';
const entityToDtoReference = mapper + '::' + 'toDto';
const reactiveSql = (databaseTypeSql && reactive);
let toResponseEntityPrefix = '';
let toResponseEntityPostfix = '';
if (!paginationNo) {
  if (reactiveSql) {
    toResponseEntityPostfix = '.map(ResponseEntity::ok)';
  } else {
    toResponseEntityPrefix = 'new ResponseEntity<>(';
    toResponseEntityPostfix = ', HttpStatus.OK)';
  }
}
for (const relationship of relationships) {
  if (relationship.relationshipOneToOne && !relationship.ownerSide) { %>
        if ("<%= relationship.relationshipName.toLowerCase() %>-is-null".equals(filter)) {
            LOG.debug("REST request to get all <%= entityClass %>s where <%= relationship.relationshipName %> is null");
    <%_ if (viaService) { _%>
            return <%- toResponseEntityPrefix %><%= entityInstance %>Service.findAllWhere<%= relationship.relationshipNameCapitalized %>IsNull()<% if (reactiveSql) { %>.collectList()<% } %><%= toResponseEntityPostfix %>;
    <%_ } else { _%>
      <%_ if (reactiveSql) { _%>
            return <%- toResponseEntityPrefix %><%= entityInstance %>Repository
                .findAllWhere<%= relationship.relationshipNameCapitalized %>IsNull()
        <%_ if (dtoMapstruct) { _%>
                .map(<%= entityToDtoReference %>)
        <%_ } _%>
                .collectList()<%= toResponseEntityPostfix %>;
      <%_ } else if (reactive) { _%>
            return <%- toResponseEntityPrefix %><%= entityInstance %>Repository
                .findAll()
                .filter(<%= entityInstance %> -> <%= entityInstance %>.get<%= relationship.relationshipNameCapitalized %>() == null)
        <%_ if (dtoMapstruct) { _%>
                .map(<%= entityToDtoReference %>)
        <%_ } _%>
                .collectList()<%= toResponseEntityPostfix %>;
      <%_ } else { _%>
            return <%- toResponseEntityPrefix %>StreamSupport
                .stream(<%= entityInstance %>Repository.findAll().spliterator(), false)
                .filter(<%= entityInstance %> -> <%= entityInstance %>.get<%= relationship.relationshipNameCapitalized %>() == null)
        <%_ if (dtoMapstruct) { _%>
                .map(<%= entityToDtoReference %>)
        <%_ } _%>
        <%_ if (!paginationNo) { _%>
                .toList(), HttpStatus.OK);
        <%_ } else { _%>
          <%_ if (dtoMapstruct) { _%>
                .collect(Collectors.toCollection(LinkedList::new));
          <%_ } else { _%>
                .toList();
          <%_ } _%>
        <%_ } _%>
      <%_ } _%>
    <%_ } _%>
        }
  <%_ } _%>
<%_ } _%>